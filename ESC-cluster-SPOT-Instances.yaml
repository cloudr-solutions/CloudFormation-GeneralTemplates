AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CloudFormation template to create an Autoscaling Group of SPOT Instances in an ECS cluster - for LEANDA

Mappings:
  VpcCidrs:
    vpc:
      cidr: 10.0.0.0/16
    pubsubnet1:
      cidr: 10.0.0.0/24
    pubsubnet2:
      cidr: 10.0.1.0/24
Parameters:
  EcsAmiId:
    Type: String
    Description: ECS EC2 AMI id
    Default: 'ami-08fa2eb77f5afe360'
  EcsInstanceType:
    Type: String
    Description: ECS EC2 instance type
    Default: t2.micro
    AllowedValues:
      - p2.xlarge
      - p2.8xlarge
      - p2.16xlarge
      - p3.2xlarge
      - p3.8xlarge
      - p3.16xlarge
      - p3dn.24xlarge
      - a1.medium
      - a1.large
      - a1.xlarge
      - a1.2xlarge
      - a1.4xlarge
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3a.nano
      - t3a.micro
      - t3a.small
      - t3a.medium
      - t3a.large
      - t3a.xlarge
      - t3a.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - m5d.large
      - m5d.xlarge
      - m5d.2xlarge
      - m5d.4xlarge
      - m5d.12xlarge
      - m5d.24xlarge
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.12xlarge
      - m5a.24xlarge
      - m5ad.large
      - m5ad.xlarge
      - m5ad.2xlarge
      - m5ad.4xlarge
      - m5ad.12xlarge
      - m5ad.24xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - c5d.large
      - c5d.xlarge
      - c5d.2xlarge
      - c5d.4xlarge
      - c5d.9xlarge
      - c5d.18xlarge
      - c5n.large
      - c5n.xlarge
      - c5n.2xlarge
      - 'c5n.4xlarge '
      - 'c5n.9xlarge '
      - c5n.18xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.12xlarge
      - r5.24xlarge
      - r5d.large
      - r5d.xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5d.12xlarge
      - r5d.24xlarge
      - r5a.large
      - r5a.xlarge
      - r5a.2xlarge
      - r5a.4xlarge
      - r5a.12xlarge
      - r5a.24xlarge
      - r5ad.large
      - r5ad.xlarge
      - r5ad.2xlarge
      - r5ad.4xlarge
      - r5ad.12xlarge
      - r5ad.24xlarge
      - x1.16xlarge
      - x1.32xlarge
      - x1e.xlarge
      - x1e.2xlarge
      - x1e.4xlarge
      - x1e.8xlarge
      - x1e.16xlarge
      - x1e.32xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - h1.2xlarge
      - h1.4xlarge
      - h1.8xlarge
      - h1.16xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - i3.metal
      - f1.2xlarge
      - f1.4xlarge
      - f1.16xlarge
      - f2.16xlarge
      - g2.2xlarge
      - g2.8xlarge
      - g3s.xlarge
      - g3.4xlarge
      - g3.8xlarge
      - g3.16xlarge
      - p2.xlarge
      - p2.8xlarge
      - p2.16xlarge
      - p3.2xlarge
      - p3.8xlarge
      - p3.16xlarge
      - p3dn.24xlarge
      - z1d.large
      - z1d.xlarge
      - z1d.2xlarge
      - z1d.3xlarge
      - z1d.6xlarge
      - z1d.12xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  SpotPrice:
    Type: Number
    Description: If greater than 0, then a EC2 Spot instance will be requested
    Default: '0'
  KeyName:
    Type: String
    Description: Optional - Name of an existing EC2 KeyPair to enable SSH access to
      the ECS instances
    Default: ''
  VpcId:
    Type: String
    Description: Optional - VPC Id of existing VPC. Leave blank to have a new VPC
      created
    Default: ''
    AllowedPattern: ^(?:vpc-[0-9a-f]{8}|vpc-[0-9a-f]{17}|)$
    ConstraintDescription: VPC Id must begin with 'vpc-' followed by either an 8 or
      17 character identifier, or leave blank to have a new VPC created
  SubnetIds:
    Type: CommaDelimitedList
    Description: Optional - Comma separated list of two (2) existing VPC Subnet Ids
      where ECS instances will run.  Required if setting VpcId.
    Default: ''
  AsgMaxSize:
    Type: Number
    Description: Maximum size and initial Desired Capacity of ECS Auto Scaling Group
    Default: '1'
  SecurityGroupIds:
    Type: CommaDelimitedList
    Description: Optional - Existing security group to associate the container instances.
      Creates one by default.
    Default: ''
  SourceCidr:
    Type: String
    Description: Optional - CIDR/IP range for EcsPort - defaults to 0.0.0.0/0
    Default: '0.0.0.0/0'
  EcsPort:
    Type: String
    Description: Optional - Security Group port to open on ECS instances - defaults
      to port 80
    Default: '80'
  VpcAvailabilityZones:
    Type: CommaDelimitedList
    Description: Optional - Comma-delimited list of VPC availability zones in which
      to create subnets.  Required if setting VpcId.
    Default: ''
  AssociatePublicIpAddress:
    Type: String
    Description: Optional - Automatically assign public IP addresses to new instances
      in this VPC.
    Default: 'true'
  ECSCluster:
    Type: String
    Description: ECS Cluster Name
    Default: LEANDA
  InstanceRole:
    Type: String
    Description: Optional - Instance IAM Role.
    Default: ''
  IsFargate:
    Type: String
    Description: Optional - Whether to create resources only for running Fargate tasks.
    Default: 'false'
  # UserData:
  #   Type: String
  #   Description: User data for EC2 instances. Required for EC2 launch type, ignored
  #     with Fargate
  #   Default: 'Content-Type: multipart/mixed; boundary="2a211a81b35ab649a568a93cb2bdf6fe373e1720ed9e34c30dbb2dc89129" MIME-Version: 1.0 --2a211a81b35ab649a568a93cb2bdf6fe373e1720ed9e34c30dbb2dc89129 Content-Type: text/text/x-shellscript; charset="utf-8" Mime-Version: 1.0 #!/bin/bash echo ECS_CLUSTER=LEANDA >> /etc/ecs/ecs.config --2a211a81b35ab649a568a93cb2bdf6fe373e1720ed9e34c30dbb2dc89129--'
Conditions:
  IsCNRegion: !Or
    - !Equals
      - !Ref 'AWS::Region'
      - cn-north-1
    - !Equals
      - !Ref 'AWS::Region'
      - cn-northwest-1
  LaunchInstances: !Equals
    - !Ref 'IsFargate'
    - 'false'
  CreateVpcResources: !Equals
    - !Ref 'VpcId'
    - ''
  CreateSecurityGroup: !And
    - !Condition 'LaunchInstances'
    - !Equals
      - !Join
        - ''
        - !Ref 'SecurityGroupIds'
      - ''
  CreateEC2LCWithKeyPair: !And
    - !Condition 'LaunchInstances'
    - !Not
      - !Equals
        - !Ref 'KeyName'
        - ''
  UseSpecifiedVpcAvailabilityZones: !Not
    - !Equals
      - !Join
        - ''
        - !Ref 'VpcAvailabilityZones'
      - ''
  CreateEcsInstanceRole: !And
    - !Condition 'LaunchInstances'
    - !Equals
      - !Ref 'InstanceRole'
      - ''
  UseSpotInstances: !Not
    - !Equals
      - !Ref 'SpotPrice'
      - 0
Resources:
  ECSCLUSTER:
    Type: AWS::ECS::Cluster
    Properties: 
      ClusterName: !Ref ECSCluster
      Tags: []
  Vpc:
    Condition: CreateVpcResources
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock: !FindInMap
        - VpcCidrs
        - vpc
        - cidr
      Tags: []
  PubSubnetAz1:
    Condition: CreateVpcResources
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'Vpc'
      CidrBlock: !FindInMap
        - VpcCidrs
        - pubsubnet1
        - cidr
      Tags: []
      AvailabilityZone: !If
        - UseSpecifiedVpcAvailabilityZones
        - !Select
          - '0'
          - !Ref 'VpcAvailabilityZones'
        - !Select
          - '0'
          - !GetAZs
            Ref: AWS::Region
  PubSubnetAz2:
    Condition: CreateVpcResources
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref 'Vpc'
      CidrBlock: !FindInMap
        - VpcCidrs
        - pubsubnet2
        - cidr
      Tags: []
      AvailabilityZone: !If
        - UseSpecifiedVpcAvailabilityZones
        - !Select
          - '1'
          - !Ref 'VpcAvailabilityZones'
        - !Select
          - '1'
          - !GetAZs
            Ref: AWS::Region
  InternetGateway:
    Condition: CreateVpcResources
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags: []
  AttachGateway:
    Condition: CreateVpcResources
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref 'Vpc'
      InternetGatewayId: !Ref 'InternetGateway'
  RouteViaIgw:
    Condition: CreateVpcResources
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'Vpc'
      Tags: []
  PublicRouteViaIgw:
    Condition: CreateVpcResources
    DependsOn: AttachGateway
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref 'RouteViaIgw'
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref 'InternetGateway'
  PubSubnet1RouteTableAssociation:
    Condition: CreateVpcResources
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'PubSubnetAz1'
      RouteTableId: !Ref 'RouteViaIgw'
  PubSubnet2RouteTableAssociation:
    Condition: CreateVpcResources
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref 'PubSubnetAz2'
      RouteTableId: !Ref 'RouteViaIgw'
  EcsSecurityGroup:
    Condition: CreateSecurityGroup
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ECS Allowed Ports
      Tags: []
      VpcId: !If
        - CreateVpcResources
        - !Ref 'Vpc'
        - !Ref 'VpcId'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref 'EcsPort'
          ToPort: !Ref 'EcsPort'
          CidrIp: !Ref 'SourceCidr'
  EcsInstanceRole:
    Condition: CreateEcsInstanceRole
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - !If
                  - IsCNRegion
                  - ec2.amazonaws.com.cn
                  - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
  EcsInstanceProfile:
    Condition: LaunchInstances
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !If
          - CreateEcsInstanceRole
          - !Ref 'EcsInstanceRole'
          - !Ref 'InstanceRole'
  EcsInstanceLc:
    Condition: LaunchInstances
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Ref 'EcsAmiId'
      InstanceType: !Ref 'EcsInstanceType'
      SpotPrice: !If
        - UseSpotInstances
        - !Ref 'SpotPrice'
        - !Ref 'AWS::NoValue'
      AssociatePublicIpAddress: !Ref 'AssociatePublicIpAddress'
      IamInstanceProfile: !Ref 'EcsInstanceProfile'
      KeyName: !If
        - CreateEC2LCWithKeyPair
        - !Ref 'KeyName'
        - !Ref 'AWS::NoValue'
      SecurityGroups: !If
        - CreateSecurityGroup
        - - !Ref 'EcsSecurityGroup'
        - !Ref 'SecurityGroupIds'
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          echo ECS_CLUSTER=${ECSCluster} >> /etc/ecs/ecs.config
  EcsInstanceAsg:
    Condition: LaunchInstances
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: !If
        - CreateVpcResources
        - - !Join
            - ','
            - - !Ref 'PubSubnetAz1'
              - !Ref 'PubSubnetAz2'
        - !Ref 'SubnetIds'
      LaunchConfigurationName: !Ref 'EcsInstanceLc'
      MinSize: '0'
      MaxSize: !Ref 'AsgMaxSize'
      DesiredCapacity: !Ref 'AsgMaxSize'
      Tags:
        - Key: Name
          Value: ECS Instance - LEANDA
          PropagateAtLaunch: true
